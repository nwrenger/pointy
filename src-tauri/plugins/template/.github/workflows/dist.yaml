name: Build Plugin Artifacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PLUGIN_NAME: capture_screenshot

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Build Plugin Dynamic Library
        run: cargo build --release

      - name: Rename and Prepare Artifact
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            # On Windows the artifact is named awesome_plugin.dll
            cp target/release/${PLUGIN_NAME}.dll dynamic_lib.dll
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            # On macOS the artifact is named libawesome_plugin.dylib
            cp target/release/lib${PLUGIN_NAME}.dylib dynamic_lib.dylib
          else
            # On Linux the artifact is named libawesome_plugin.so
            cp target/release/lib${PLUGIN_NAME}.so dynamic_lib.so
          fi

      - name: Upload Dynamic Library Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-dylib-${{ matrix.os }}
          path: dynamic_lib.*

  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Dynamic Library Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Final Plugin Folder Structure
        run: |
          # Create final structure: plugin/<PLUGIN_NAME>/
          mkdir -p plugin/${PLUGIN_NAME}
          # Copy Linux build artifact (from ubuntu-latest runner)
          cp artifacts/plugin-dylib-ubuntu-latest/dynamic_lib.so plugin/${PLUGIN_NAME}/linux.so
          # Copy macOS build artifact (from macos-latest runner)
          cp artifacts/plugin-dylib-macos-latest/dynamic_lib.dylib plugin/${PLUGIN_NAME}/mac.dylib
          # Copy Windows build artifact (note: runner name may be capitalized, adjust if needed)
          cp artifacts/plugin-dylib-Windows/dynamic_lib.dll plugin/${PLUGIN_NAME}/windows.dll
          # Copy asset files (icon and plugin manifest) from the assets directory.
          cp assets/icon.svg plugin/${PLUGIN_NAME}/icon.svg
          cp assets/plugin_manifest.json plugin/${PLUGIN_NAME}/plugin_manifest.json

      - name: Upload Final Plugin Structure Artifact
        uses: actions/upload-artifact@v4
        with:
          name: final-plugin-structure
          path: plugin
